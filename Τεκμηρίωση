Για την παραάλληλη εκτέλεση του πολλαπλασιασμού vector*matrix χρησιμοποιήθηκε η βιβλιοθήκη omp.h.
Η βιβλιοθήκη omp.h είναι η βιβλιοθήκη του OpenMP (Open Multi-Processing), η οποία παρέχει εντολές για παραλληλισμό του κώδικα.

Ο στόχος του OpenMP είναι να επιτρέπει στους προγραμματιστές να παραλληλοποιούν τον κώδικα τους εύκολα και αποτελεσματικά, χωρίς την ανάγκη για πολύπλοκες δομές κώδικα.
Οι εντολές παραλληλίας που χρησιμοποιήθηκαν στον κώδικα είναι η #pragma omp parallel for, η οποία δημιουργεί μια ομάδα νημάτων που εκτελούν παράλληλα τον βρόχο, καθώς επίσης και η 
#pragma omp parallel atomic η οποία επιτρέπει να εκτελεστούν ατομικά οι εντολές της από κάθε νήμα, χωρίς παράλληλες ενέργειες άλλων νημάτων.


Συνάρτηση multiply_vector_matrix

Η συνάρτηση multiply_vector_matrix() παίρνει σαν ορίσματα το Ν, το διάνυσμα μεγέθος Ν, τον πίνακα μεγέθοους ΝxN καθώς και έναν πίνακα μεγέθους Ν για την αποθήκευση των αποτελεσμάτων των πολλαπλασιασμών. 
Ορίζουμε τους integers step, i, j ως μετρητές για τα for loops. 
Με την εντολή  #pragma omp parallel for private(step, i, j) ξεκινάει η παράλληλη περιοχή, δηλαδή κάθε νήμα θα εκτελεί παράλληλα το loop αυτο έχοντας το δικό του "αντίγραφο" του βρόχου. 
Ορίζουμε έπειτα δύο μεταβλητές start και end. Η start παίρνει την τιμή 0 εάν το step είναι μικρότερο του Ν, ενώ η end παίρνει την τιμή του step αν το step είναι μικρότερο του Ν. Με αυτόν τον τρόπο στο επόμενο εμφωλευμένο for loop κάθε νήμα ξεχωριστά θα μπαίνει (#pragma omp atomic). Αρχικά θα εκτελεστεί ο πολλαπλασιασμός του πρώτου στοιχείου το διανύσματος το το στοιχείο [0,0] του πίνακα όπως φαίναται παρακάτω βηματικά:


Βήμα 1:
step = 0 άρα 
start= end = 0
Στην 1η επανάληψη ο εσωτερικός βρόχος για i = 0 to i = 0 πραγματοποιώντας πολλαπλασιασμό για το πρώτο στοιχείο του διανύσματος με το αντίστοιχο πρώτο του πίνακα.


Βήμα 2:
step = 1 άρα 
start=0 και end = step= 1
Στην 2η επανάληψη ο εσωτερικός βρόχος για i = 0 to i = 1 πραγματοποιώντας τους υπολογισμούς υπολογισμούς για τα 2 πρώτα στοιχεία του διανύσματος και τα αντίστοιχα στοιχεία του πίνακα.


Βήμα 3:

step = 2 άρα
start = 0
end = 2
Για το τρίτο βήμα, η start είναι 0 και η end είναι 2.
Ο εσωτερικός βρόχος επαναλαμβάνεται από i = 0 έως i = 2, πραγματοποιώντας τους υπολογισμούς για τα τρία πρώτα στοιχεία του διανύσματος και τα αντίστοιχα στοιχεία του πίνακα.

Και ούτω καθεξής για τα υπόλοιπα βήματα, καλύπτονται διαδοχικά τα τμήματα του πολλαπλασιασμού πίνακα-διανύσματος, χειρίζοντας αποτελεσματικά τα και τα δύο τριγωνικά μέρη του πίνακα.

Τα αποτελέσματα αποθηκεύονται στο πίνακα result κελί step - i.


Συνάρτηση main()
Το πρόγραμμα ζητάει απο τον χρήστη να δώσει το μέγεθος Ν του διανύσματος και του πίνακα, το διάνυσμα, τον πίνακα, αρχικοποιεί τον πίνακα των αποτελεσμάτων με 0 και 
καλεί την συνάρτηση multiply_vector_matrix με τα δεδομένα που έδωσε ο χρήστης και τον πίνακα result. Τέλος το πρόγραμμα εμφανίζει τα αποτελέσματα του πολλαπλασιασμού.
